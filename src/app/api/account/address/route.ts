import { NextResponse } from "next/server"
import prisma from "@/lib/prisma"
import { getServerSession } from "next-auth"
import { authOptions } from "@/app/api/auth/[...nextauth]/route" // üëà –ø—É—Ç—å –∫ —Ç–≤–æ–µ–º—É NextAuth

export async function POST(req: Request) {
  try {
    const session = await getServerSession(authOptions)

    if (!session?.user?.email) {
      return NextResponse.json({ error: "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" }, { status: 401 })
    }

    // –û–∂–∏–¥–∞–µ–º JSON –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
    const body = await req.json()
    const address: string | null = body.address ?? null
    const country: string | null = body.country ?? null

    const user = await prisma.user.update({
      where: { email: session.user.email },
      data: { address, country },
    })

    return NextResponse.json({ success: true, user })
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞:", error)
    return NextResponse.json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" }, { status: 500 })
  }
}
