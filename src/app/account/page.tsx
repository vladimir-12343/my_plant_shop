import { redirect } from "next/navigation"
import prisma from "@/lib/prisma"
import AccountClient from "@/components/AccountClient"
import { getServerSession } from "next-auth"
import { authOptions } from "../api/auth/[...nextauth]/route"

export const dynamic = "force-dynamic"

export default async function AccountPage() {
  const session = await getServerSession(authOptions)

  // –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ—Å—Å–∏–∏ ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /login
  if (!session?.user?.email) {
    redirect("/login")
  }

  console.log("üëâ SESSION:", session)

  // üëá —Ä–∞—Å—à–∏—Ä—è–µ–º user, —á—Ç–æ–±—ã –±—ã–ª role
  const userSession = session.user as typeof session.user & {
    id: string
    role: "USER" | "ADMIN"
  }

  // –ï—Å–ª–∏ –∞–¥–º–∏–Ω ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–¥–º–∏–Ω–∫—É
  if (userSession.role === "ADMIN") {
    redirect("/admin/products")
  }

  // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
  const user = await prisma.user.findUnique({
    where: { email: userSession.email! },
    include: {
      orders: { orderBy: { createdAt: "desc" } },
    },
  })

  if (!user) {
    redirect("/login")
  }

  // üëá fullName –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–æ–∫–∞
  const fullName =
    [user.firstName, user.lastName].filter(Boolean).join(" ") ||
    userSession.email ||
    ""

  return <AccountClient user={user} fullName={fullName} />
}
