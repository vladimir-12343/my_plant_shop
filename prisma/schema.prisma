generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             Int           @id @default(autoincrement())
  slug           String        @unique
  name           String
  description    String?
  price          Int           // —Ü–µ–Ω–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
  compareAtPrice Int?          // —Å—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞, –≤ –∫–æ–ø–µ–π–∫–∞—Ö
  stock          Int           @default(0)
  sku            String?       @unique
  active         Boolean       @default(true)
  isFeatured     Boolean       @default(false)
  featuredAt     DateTime?
  coverImage     String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  discount Int? // —Å–∫–∏–¥–∫–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä

  category       Category      @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  categoryId     Int

  images         ProductImage[]

  @@index([active, createdAt])
  @@index([categoryId, active])
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  alt       String?
  sortOrder Int      @default(0)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  @@index([productId, sortOrder])
}

model Category {
  id            Int         @id @default(autoincrement())
  name          String
  slug          String
  parentId      Int?
  parent        Category?   @relation("CategoryToCategory", fields: [parentId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  subcategories Category[]  @relation("CategoryToCategory")
  products      Product[]

  @@unique([parentId, slug]) // —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å slug –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–æ–¥–∏—Ç–µ–ª—è
}

model User {
  id        String   @id @default(cuid())
  firstName String?
  lastName  String?
  email     String   @unique
  password  String
  address   String?   // üè† –æ—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å
  country   String?   // üåç —Å—Ç—Ä–∞–Ω–∞
  role      Role     @default(USER)   // üëà –Ω–æ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders Order[]
}
model Order {
  id        Int          @id @default(autoincrement())
  userId    String
  user      User         @relation(fields: [userId], references: [id])
  products  Json         // —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤)
  total     Int          // —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –≤ –∫–æ–ø–µ–π–∫–∞—Ö –∏–ª–∏ —Ü–µ–Ω—Ç–∞—Ö
  status    OrderStatus  @default(NEW)
  createdAt DateTime     @default(now())
}

enum OrderStatus {
  NEW
  IN_PROGRESS
  READY
  CANCELLED
}

enum Role {
  USER
  ADMIN
}
